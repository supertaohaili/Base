apply plugin: 'com.android.application'

File signPropertiesFile = rootProject.file('sign/keystore.properties')

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        resConfigs "zh"
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
        }
    }

//    if (signPropertiesFile.exists()) {
//        Properties properties = new Properties()
//        properties.load(new FileInputStream(signPropertiesFile))
//        signingConfigs {
//            debug {
//                storeFile rootProject.file(properties['keystore'])
//                storePassword properties['storePassword']
//                keyAlias properties['keyAlias']
//                keyPassword properties['keyPassword']
//            }
//            release {
//                storeFile rootProject.file(properties['keystore'])
//                storePassword properties['storePassword']
//                keyAlias properties['keyAlias']
//                keyPassword properties['keyPassword']
//            }
//        }
//    }

    buildTypes {

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            versionNameSuffix "-debug"
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
//            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "video${defaultConfig.versionName}_${releaseTime()}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }

    //删除META-INF信息
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/maven/com.squareup.okhttp3/okhttp/pom.xml'
        exclude 'META-INF/maven/com.squareup.okhttp3/okhttp/pom.properties'
        exclude 'META-INF/maven/com.squareup.okio/okio/pom.xml'
        exclude 'META-INF/maven/com.squareup.okio/okio/pom.properties'
        exclude 'META-INF/maven/com.google.code.gson/gson/pom.xml'
        exclude 'META-INF/maven/com.google.code.gson/gson/pom.properties'
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
    dexOptions {
        incremental true
    }
}

buildscript {
    repositories {
        jcenter()
    }
}

repositories {
    flatDir {
        dirs 'libs', '../lib_ui/libs', '../lib_base/libs'  //就是你放aar的目录地址
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["cardview-v7"]
    compile 'com.github.supertaohaili:Base:1.0.3'
//    compile project(path: ':lib_base')
//    compile 'com.github.supertaohaili:lib_base:1.0.1'
    //    compile 'com.github.supertaohaili:lib_base:1.0.0'
}
